name: Retrieve Token and Reserve Device

on:
  workflow_dispatch: # Permite execução manual do workflow

jobs:
  generate-token:
    runs-on: ubuntu-latest
    environment: secrets

    steps:
    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Calculate Start and End Times
      run: |
        # Calcula os horários dinamicamente no formato ISO 8601 (com 'Z' indicando UTC)
        START_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ" -d "+1 minute")
        END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ" -d "+1 hour 1 minute")

        echo "Calculated Start Time: $START_TIME"
        echo "Calculated End Time: $END_TIME"

        # Salva os horários como variáveis de ambiente para os próximos passos
        echo "START_TIME=$START_TIME" >> $GITHUB_ENV
        echo "END_TIME=$END_TIME" >> $GITHUB_ENV

    - name: Generate OAuth Token
      env:
        CLIENT: ${{ vars.CLIENT }}
        SECRET: ${{ vars.SECRET }}
        TENANT: ${{ vars.TENANT }}
      run: |
        echo "Generating token with the following details:"
        echo "CLIENT: $CLIENT"
        echo "SECRET: ***"
        echo "TENANT: $TENANT"

        # Captura a resposta do curl
        RESPONSE=$(curl -i -s -k -X POST https://labmobile.keeggo.com/rest/oauth2/token \
          -H "Content-Type: application/json" \
          -d "{\"client\":\"$CLIENT\", \"secret\":\"$SECRET\", \"tenant\":\"$TENANT\"}")

        echo "Full Response:"
        echo "$RESPONSE"

        # Extrair o cabeçalho x-hp4msecret
        HEADER_X_HP4MSECRET=$(echo "$RESPONSE" | grep -i "x-hp4msecret" | awk '{print $2}' | tr -d '\r')

        # Validar o cabeçalho x-hp4msecret
        if [ -z "$HEADER_X_HP4MSECRET" ]; then
          echo "Error: x-hp4msecret header not retrieved from the response"
          exit 1
        fi

        echo "x-hp4msecret: $HEADER_X_HP4MSECRET"

        # Extrair o corpo da resposta
        BODY=$(echo "$RESPONSE" | sed -n '/^\r$/,$p' | tail -n +2)

        # Validar e extrair o token usando jq
        TOKEN=$(echo "$BODY" | jq -r '.access_token')

        if [ -z "$TOKEN" ]; then
          echo "Error: Token not retrieved from the response"
          exit 1
        fi

        echo "Token: $TOKEN"

        # Salvar o token e o cabeçalho como variáveis de ambiente para os próximos passos
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
        echo "X_HP4MSECRET=$HEADER_X_HP4MSECRET" >> $GITHUB_ENV

    - name: Print Token and Header
      run: |
        echo "The retrieved token is:"
        echo "***" # Não exibe o token diretamente nos logs
        echo "The x-hp4msecret header is:"
        echo "${{ env.X_HP4MSECRET }}"

    - name: Reserva de device 
      run: |
        # Faz a chamada à API para reservar o dispositivo
        RESPONSE=$(curl -k -s -o response.json -w "%{http_code}" -X POST "https://labmobile.keeggo.com/rest/v2/public/reservation" \
          -H "Authorization: Bearer ${{ env.TOKEN }}" \
          -H "x-hp4msecret: ${{ env.X_HP4MSECRET }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"startTime\": \"${{ env.START_TIME }}\",
            \"endTime\": \"${{ env.END_TIME }}\",
            \"releaseOnJobCompletion\": false,
            \"deviceCapabilities\": {
              \"deviceName\": \"Galaxy A52\",
              \"udid\": \"RQCT302RQJH\"
            }
          }")

        echo "HTTP Response Code: $RESPONSE"

        if [ "$RESPONSE" -ne 200 ]; then
          echo "Error: Failed to reserve device. Response code: $RESPONSE"
          cat response.json
          exit 1
        fi

        echo "Device reserved successfully:"
        cat response.json
