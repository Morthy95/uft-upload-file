name: Retrieve Token, Reserve Device and Upload Artefact

on:
  workflow_dispatch:

jobs:
  upload-aplication:
    runs-on: ubuntu-latest  # Usa um runner self-hosted configurado no Red Hat

    steps:
    - name: Install jq and unzip (Red Hat)
      run: sudo apt-get install -y jq unzip

    - name: Calculate Start and End Times
      run: |
        echo "Calculando horários em formato ISO 8601 (UTC)..."
        START_TIME=$(TZ=America/Sao_Paulo date +"%Y-%m-%dT%H:%M:%S%:z" -d "+1 minute")
        END_TIME=$(TZ=America/Sao_Paulo date +"%Y-%m-%dT%H:%M:%S%:z" -d "+1 hour 1 minute")
      
        echo "Calculated Start Time: $START_TIME"
        echo "Calculated End Time: $END_TIME"

        echo "START_TIME=$START_TIME" >> $GITHUB_ENV
        echo "END_TIME=$END_TIME" >> $GITHUB_ENV

    - name: Generate OAuth Token
      env:
        CLIENT: ${{ secrets.CLIENT }}
        SECRET: ${{ secrets.SECRET }}
        TENANT: ${{ secrets.TENANT }}
      run: |
        echo "Gerando o token OAuth..."
        RESPONSE=$(curl -i -s -k -X POST https://labmobile.keeggo.com/rest/oauth2/token \
          -H "Content-Type: application/json" \
          -d "{\"client\":\"$CLIENT\", \"secret\":\"$SECRET\", \"tenant\":\"$TENANT\"}")

        echo "Resposta completa:"
        echo "$RESPONSE"

        HEADER_X_HP4MSECRET=$(echo "$RESPONSE" | grep -i "x-hp4msecret" | awk '{print $2}' | tr -d '\r')
        if [ -z "$HEADER_X_HP4MSECRET" ]; then
          echo "Erro: Cabeçalho x-hp4msecret não encontrado."
          exit 1
        fi
        echo "x-hp4msecret: $HEADER_X_HP4MSECRET"

        BODY=$(echo "$RESPONSE" | sed -n '/^\r$/,$p' | tail -n +2)
  

        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
        echo "X_HP4MSECRET=$HEADER_X_HP4MSECRET" >> $GITHUB_ENV

    - name: Print Token and Header
      run: |
        echo "Token e cabeçalho obtidos:"
        echo "x-hp4msecret: ${{ env.X_HP4MSECRET }}"
        echo "xtoken: ${{ env.TOKEN }}"

    - name: Reserva de device 
      run: |
        echo "Reservando o dispositivo..."
        RESPONSE=$(curl -k -s -o response.json -w "%{http_code}" -X POST "https://labmobile.keeggo.com/rest/v2/public/reservation" \
          -H "Authorization: Bearer ${{ env.TOKEN }}" \
          -H "x-hp4msecret: ${{ env.X_HP4MSECRET }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"startTime\": \"${{ env.START_TIME }}\",
            \"endTime\": \"${{ env.END_TIME }}\",
            \"releaseOnJobCompletion\": false,
            \"deviceCapabilities\": {
              \"deviceName\": \"iPhone Se\",
              \"udid\": \"00008030-00040D410247802E\"
            }
          }")

        HTTP_CODE=$(tail -n 1 <<< "$RESPONSE")
        echo "HTTP Response Code: $HTTP_CODE"

        if [ "$HTTP_CODE" -ne 200 ]; then
          echo "Erro ao reservar o dispositivo. Resposta completa:"
          cat response.json
          exit 1
        fi
        echo "Dispositivo reservado com sucesso:"
        cat response.json
        
    - name: Download APK
      run: |
        echo "Baixando o APK..."
        curl -L -o app.apk "https://github.com/k9mail/k-9/releases/download/5.600/k9-5.600.apk"

        if [ -f "app.apk" ]; then
          echo "APK baixado com sucesso."
        else
          echo "Erro: Falha no download do APK."
          exit 1
        fi

    - name: Verificar APK
      run: |
        echo "Verificando o arquivo APK baixado..."
        if unzip -l app.apk | grep -q AndroidManifest.xml; then
          echo "O arquivo APK é válido e contém o AndroidManifest.xml."
        else
          echo "Erro: O arquivo APK não contém o AndroidManifest.xml. O processo será interrompido."
          exit 1
        fi

    - name: Enviar Artefato para UFT Mobile
      run: |
        echo "Iniciando upload do artefato para o UFT Mobile..."
        RESPONSE=$(curl -k -X POST "https://labmobile.keeggo.com/rest/apps" \
          -H "Authorization: Bearer ${{ env.TOKEN }}" \
          -H "x-hp4msecret: ${{ env.X_HP4MSECRET }}" \
          -F "file=@app.apk" \
          -F "fileName=K-9_Mail_8.1_APKPure.apk" \
          -F "description=Aplicativo Android para teste" \
          -F "overrideExistingFile=true" \
          -F "workspaceId=de896153-bda6-4e11-a197-aa99b4a1f75e" \
          -o upload_response.json -w "%{http_code}")

        HTTP_CODE=$(tail -n 1 <<< "$RESPONSE")
        echo "HTTP Response Code: $HTTP_CODE"

        if [ "$HTTP_CODE" -ne 200 ]; then
          echo "Erro no upload do artefato. Resposta completa:"
          cat upload_response.json
          exit 1
        fi

        echo "Upload concluído com sucesso! Resposta:"
        cat upload_response.json
