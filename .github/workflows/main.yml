  name: Generate Token and Use It

on:
  workflow_dispatch: # Permite execução manual do workflow

jobs:
  generate-token:
    runs-on: ubuntu-latest
    environment: secrets

    steps:
    
    - name: Install jq
      run: sudo apt-get install jq

    - name: Generate OAuth Token
      env:
        CLIENT: ${{ vars.CLIENT }}
        SECRET: ${{ vars.SECRET }}
        TENANT: ${{ vars.TENANT }}
      run: |
        echo "Generating token with the following details:"
        echo "CLIENT: $CLIENT"
        echo "SECRET: $SECRET"
        echo "TENANT: $TENANT"

      
        curl -k -X POST https://labmobile.keeggo.com/rest/oauth2/token \
          -H "Content-Type: application/json" \
          -d "{\"client\":\"$CLIENT\", \"secret\":\"$SECRET\", \"tenant\":\"$TENANT\"}"

        echo "Response: $RESPONSE"
        
        # Validar se o JSON está bem formatado
        echo "$RESPONSE" | jq .
        
        # Extrair o token usando jq
        TOKEN=$(echo $RESPONSE | jq -r '.access_token')
        echo "Token: $TOKEN"

          # Verifica se o token foi extraído corretamente
        if [ -z "$TOKEN" ]; then
          echo "Error: Token not retrieved from the response"
          exit 1
        fi
        echo "Token: $TOKEN"

        # Salvar o token como variável de ambiente para o próximo passo
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
          
    - name: Print Token
      env:
        TOKEN: ${{ env.TOKEN }}
      run: |
        echo "The retrieved token is:"
        echo "$TOKEN"
