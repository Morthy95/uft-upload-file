name: Retrieve Token, Reserve Device and Upload Artefact

on:
  workflow_dispatch:
    inputs:
      artefact_url:
        description: 'URL do artefato a ser baixado'
        required: true

jobs:
  upload-aplication:
    runs-on: ubuntu-latest  # Usa um runner self-hosted configurado no Red Hat

    steps:
    - name: Install jq and unzip (Red Hat)  # Instala ferramentas necess√°rias para manipula√ß√£o de JSON e arquivos zipados
      run: sudo apt-get install -y jq unzip

    - name: Calculate Start and End Times  # Calcula os hor√°rios de in√≠cio e t√©rmino para reserva de dispositivo no formato ISO 8601 (UTC)
      run: |
        echo "Calculando hor√°rios em formato ISO 8601 (UTC)..."
        START_TIME=$(TZ=America/Sao_Paulo date +"%Y-%m-%dT%H:%M:%S%:z" -d "+1 minute")
        END_TIME=$(TZ=America/Sao_Paulo date +"%Y-%m-%dT%H:%M:%S%:z" -d "+1 hour 1 minute")

        echo "Calculated Start Time: $START_TIME"
        echo "Calculated End Time: $END_TIME"
        echo "START_TIME=$START_TIME" >> $GITHUB_ENV
        echo "END_TIME=$END_TIME" >> $GITHUB_ENV

    - name: Generate OAuth Token  # Gera o token OAuth necess√°rio para autentica√ß√£o nas APIs do UFT Mobile
      env:
        CLIENT: ${{ secrets.CLIENT }}
        SECRET: ${{ secrets.SECRET }}
        TENANT: ${{ secrets.TENANT }}
      run: |
        echo "Gerando o token OAuth..."
        RESPONSE=$(curl -i -s -k -X POST https://labmobile.keeggo.com/rest/oauth2/token \
          -H "Content-Type: application/json" \
          -d "{\"client\":\"$CLIENT\", \"secret\":\"$SECRET\", \"tenant\":\"$TENANT\"}")
        echo "Resposta completa:"
        echo "$RESPONSE"
        HEADER_X_HP4MSECRET=$(echo "$RESPONSE" | grep -i "x-hp4msecret" | awk '{print $2}' | tr -d '\r')
        if [ -z "$HEADER_X_HP4MSECRET" ]; then
          echo "Erro: Cabe√ßalho x-hp4msecret n√£o encontrado."
          exit 1
        fi
        echo "x-hp4msecret: $HEADER_X_HP4MSECRET"
        BODY=$(echo "$RESPONSE" | sed -n '/^\r$/,$p' | tail -n +2)
        TOKEN=$(echo "$BODY" | jq -r '.access_token')

        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
        echo "X_HP4MSECRET=$HEADER_X_HP4MSECRET" >> $GITHUB_ENV

    - name: Print Token and Header  # Exibe o token e o cabe√ßalho de autentica√ß√£o para verifica√ß√£o
      run: |
        echo "Token e cabe√ßalho obtidos:"
        echo "x-hp4msecret: $X_HP4MSECRET"
        echo "xtoken: $TOKEN"

    - name: Reserva de device  # Faz a reserva do dispositivo especificado com os hor√°rios calculados
      run: |
        echo "Reservando o dispositivo..."
        RESPONSE=$(curl -k -s -o response.json -w "%{http_code}" -X POST "https://labmobile.keeggo.com/rest/v2/public/reservation" \
          -H "Authorization: Bearer $TOKEN" \
          -H "x-hp4msecret: $X_HP4MSECRET" \
          -H "Content-Type: application/json" \
          -d "{
            \"startTime\": \"$START_TIME\",
            \"endTime\": \"$END_TIME\",
            \"releaseOnJobCompletion\": false,
            \"deviceCapabilities\": {
              \"deviceName\": \"iPhone Se\",
              \"udid\": \"00008030-00040D410247802E\"
            }
          }")
        HTTP_CODE=$(tail -n 1 <<< "$RESPONSE")
        echo "HTTP Response Code: $HTTP_CODE"
        if [ "$HTTP_CODE" -ne 200 ]; then
          echo "Erro ao reservar o dispositivo. Resposta completa:"
          cat response.json
          exit 1
        fi
        echo "Dispositivo reservado com sucesso:"
        cat response.json

    - name: Download Artefato (Inser√ß√£o solicitada)  # üöÄ **PARTE MODIFICADA**: Artefato agora √© fornecido via input do usu√°rio e ser√° usado no upload
      run: |
        echo "Baixando o artefato da URL fornecida: ${{ github.event.inputs.artefact_url }}"
        ARTEFATO_NOME=$(basename "${{ github.event.inputs.artefact_url }}")
        curl -L -o "$ARTEFATO_NOME" "${{ github.event.inputs.artefact_url }}"
        if [ -f "$ARTEFATO_NOME" ]; then
          echo "Artefato baixado com sucesso: $ARTEFATO_NOME"
          echo "ARTEFATO_NOME=$ARTEFATO_NOME" >> $GITHUB_ENV
        else
          echo "Erro: Falha no download do artefato."
          exit 1
        fi

    - name: Verificar APK  # Verifica se o APK cont√©m o arquivo AndroidManifest.xml, garantindo a validade do arquivo
      run: |
        echo "Verificando o arquivo APK baixado..."
        if unzip -l "$ARTEFATO_NOME" | grep -q AndroidManifest.xml; then
          echo "O arquivo APK √© v√°lido e cont√©m o AndroidManifest.xml."
        else
          echo "Erro: O arquivo APK n√£o cont√©m o AndroidManifest.xml. O processo ser√° interrompido."
          exit 1
        fi

    - name: Enviar Artefato para UFT Mobile  # Faz o upload do mesmo arquivo baixado para o ambiente do UFT Mobile
      run: |
        echo "Iniciando upload do artefato ($ARTEFATO_NOME) para o UFT Mobile..."
        RESPONSE=$(curl -k -X POST "https://labmobile.keeggo.com/rest/apps" \
          -H "Authorization: Bearer $TOKEN" \
          -H "x-hp4msecret: $X_HP4MSECRET" \
          -F "file=@$ARTEFATO_NOME" \
          -F "fileName=$ARTEFATO_NOME" \
          -F "description=Aplicativo Android para teste" \
          -F "overrideExistingFile=true" \
          -F "workspaceId=de896153-bda6-4e11-a197-aa99b4a1f75e" \
          -o upload_response.json -w "%{http_code}")

        HTTP_CODE=$(tail -n 1 <<< "$RESPONSE")
        echo "HTTP Response Code: $HTTP_CODE"
        if [ "$HTTP_CODE" -ne 200 ]; then
          echo "Erro no upload do artefato. Resposta completa:"
          cat upload_response.json
          exit 1
        fi
        echo "Upload conclu√≠do com sucesso! Resposta:"
        cat upload_response.json


   

